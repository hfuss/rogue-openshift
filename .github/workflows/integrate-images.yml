on:
  push:
    branches:
      - master
    paths:
      - .github/workflows/integrate-images.yml
      - build/**
      - VERSION
  pull_request:
    paths:
      - .github/workflows/integrate-images.yml
      - build/**
      - VERSION
name: pull-request
jobs:
  build-images:
    name: Image Builds
    runs-on: ubuntu-latest
    steps:
      - name: git checkout
        uses: actions/checkout@v2

      - name: extract versions
        id: versions
        run: |
          export VERSION="$(cat VERSION)"
          export DIRTY_VERSION="${VERSION}-$(git log --format=%h -1)"

          echo "::set-output name=version::$(cat VERSION)"
          echo "::set-output name=dirty-version::$(cat VERSION)-$(git log --format=%h -1)"

      - name: build images
        run: |
          ./hack/build-images.sh ${{ steps.versions.outputs.dirty-version }} brix4dayz

      - name: push images
        run: |
          docker login --username ${{ secrets.DOCKER_USERNAME }} --password-stdin docker.io <<<'${{ secrets.DOCKER_PASSWORD }}'
          ./hack/retag-images.sh ${{ steps.versions.outputs.dirty-version }} ${{ steps.versions.outputs.version }}
          ./hack/push-images.sh ${{ steps.versions.outputs.version }}
          ./hack/retag-images.sh ${{ steps.versions.outputs.version }} latest
          ./hack/push-images.sh latest
        if: ${{ github.event_name == 'push' }}

      - name: github release
        uses: actions/create-release@latest
        with:
          tag_name: ${{ steps.versions.outputs.version }}
          release_name: Pre Release ${{ steps.versions.outputs.version }}
          body: |
            - base `brix4dayz/rogue` image
          draft: false
          prerelease: true
        if: ${{ github.event_name == 'push' }}
